@model NewEmployee
@{
    ViewData["Title"] = "AddEmployee";
}

<div class="container">
    <div class="row">
        <div class="col-sm-4 col-sm-offset-4">
            <div class="card">
                <div class="card-header text-center">
                    <h2>Welcome</h2>
                </div>
                <div class="card-body">

                    @using (Html.BeginForm("AddEmployee", "Home", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                    <div class="form-horizontal">


                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group row">
                            <div class="col">
                                @Html.LabelFor(employee => employee.FName, htmlAttributes: new { @class = "control-label col-md-2" })
                            </div>
                            <div class="col-md-8">
                                @Html.EditorFor(employee => employee.FName, new { htmlAttributes = new { @class = "form-control", placeholder = "First name" } })
                                @Html.ValidationMessageFor(employee => employee.FName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(employee => employee.LName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(employee => employee.LName, new { htmlAttributes = new { @class = "form-control", placeholder = "Last name" } })
                                @Html.ValidationMessageFor(employee => employee.LName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(employee => employee.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(employee => employee.Username, new { htmlAttributes = new { @class = "form-control", placeholder = "Username" } })
                                @Html.ValidationMessageFor(employee => employee.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(employee => employee.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(employee => employee.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                                @Html.ValidationMessageFor(employee => employee.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(employee => employee.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(employee => employee.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm Password" } })
                                @Html.ValidationMessageFor(employee => employee.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(employee => employee.IsManager, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.CheckBoxFor(employee => employee.IsManager, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })

                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Submit" class="btn btn-lg btn-primary btn-block text-uppercase" />
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-2">
                                <label class=" label-success">@ViewBag.SuccessMessage</label>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-2">
                                <label class=" label-danger">@ViewBag.ErrorMessage</label>
                            </div>
                        </div>
                    </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>



