
@using RentMeEmployee.Controllers;
@model IEnumerable<SharedCode.Model.InventoryItem>

@{
	ViewData["Title"] = "ViewInventory";
}

<style>
	@@media screen and (max-width: 1200px) {
		.body-container {
			margin: unset !important;
		}
	}

	.btn-primary {
		background-color: unset;
		color: unset;
		border: unset;
	}

	.filter-label {
		background-color: #007bff;
		margin-bottom: .5em;
		color: white;
	}
</style>


<div>
	<div class="text-center row">
		<h2 style="margin: .5em auto;">
			View Inventory
		</h2>
	</div>
</div>
<div class="container">
	
	<div class="row">
		<table class="table">
			<thead>
				<tr>
					<th>
						
						@Html.DisplayNameFor(model => model.Title)
						
					</th>
					<th>
						
						@Html.DisplayNameFor(model => model.Category)
							
					</th>
					<th>
						
						@Html.DisplayNameFor(model => model.Type)
						
					</th>
					<th>
						
						@Html.DisplayNameFor(model => model.Condition)
							
					</th>
					<th>
						
						@Html.DisplayNameFor(model => model.InventoryId)
						
					</th>
					<th>
						@Html.DisplayNameFor(model => model.InStock)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.IsRented)
					</th>
					<th></th>
					<th></th>
					<th></th>
				</tr>
			</thead>
			<tbody>
			@foreach (var item in Model)
			{
				<tr>
					<td>
						@Html.DisplayFor(modelItem => item.Title)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Category)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Type)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Condition)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.InventoryId)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.InStock)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.IsRented)
					</td>
					<td>
						<button class="btn">
							<a asp-controller="Inventory" asp-action="InventoryItemHistory" asp-route-id="@item.InventoryId">View Item History</a>
						</button>
					</td>
					<td>
						<button type="button" class="btn btn-danger text-center mx-auto" data-toggle="modal" data-target="@("#modal"+item.InventoryId)">
							Remove
						</button>
					</td>
					<td>
						<div class="modal fade" id="@("modal"+item.InventoryId)" tabindex="-1" role="dialog" aria-labelledby="confirmationModal" aria-hidden="true">
							<div class="modal-dialog" role="document">
								<div class="modal-content">
									<div class="modal-header">
										<h5 class="modal-title text-center" id="exampleModalLabel">Confirmation</h5>
										<button type="button" class="close" data-dismiss="modal" aria-label="Cancel">
											<span aria-hidden="true">&times;</span>
										</button>
									</div>
									<div class="modal-body text-center">
										Are you sure you want to remove <b>@item.Title</b> with inventory ID @item.InventoryId?
									</div>
									<div class="modal-footer">
										<div class="row">
											<div class="col float-left">
												<a asp-controller="Inventory" asp-action="RemoveInventoryItem" asp-route-id="@item.InventoryId">
													<input type="submit" value="Confirm" class="btn btn-danger text-uppercase" style="float: left;" />
												</a>
											</div>
											<div class="col">
												<button type="button" class="btn btn-secondary text-uppercase" data-dismiss="modal" style="float: right;">Cancel</button>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</td>
				</tr>
			}
			</tbody>
		</table>
		
	 
			<div class="col">
				<div class="text-center">
					<a asp-controller="Inventory" asp-action="AddInventory" class="btn btn-primary">Add Inventory</a>
				</div>
			</div>
	   
		<div class="form-group">
				<div class="col-md-2 offset-md-2">
					<label class="text-danger">@ViewBag.ErrorMessage</label>
				</div>
			</div>


	</div>
</div>



