@model RegisteringMember
@{
    ViewData["Title"] = "Register";
}
<head>
    <style>
        label {
            min-width: 175px;
        }
        input {
            width: 100%;
        }
        .input-container {
            width: 70%;
            float: right;
        }
        .button-container {
            margin: 0 10% !important;
            max-width: 80% !important;
        }
        .card {
            box-shadow: .5em .2em 1em .3em #9494b8;
            border-radius: .5em;
        }

        @@media screen and (max-width: 1200px) {
            .input-container {
                width: 90%;
                margin: 0 5%;
            }
        }
    </style>
</head>
<div class="container">
    <div class="row">
        <div class="col-md-8 offset-2">
            <div class="card">
                <div class="card-header text-center">
                    <h2>Register</h2>
                </div>
                <div class="card-body">

                    @using (Html.BeginForm("Register", "Accounts", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                       


                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group row">
                                @Html.LabelFor(customer => customer.First, htmlAttributes: new { @class = "col-md-2", @style = "float: left" })
                                <div class="input-container">
                                    @Html.EditorFor(customer => customer.First, new { htmlAttributes = new { @class = "form-control", placeholder = "First name" } })
                                    @Html.ValidationMessageFor(customer => customer.First, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(customer => customer.Last, htmlAttributes: new { @class = "col-md-2", @style = "float: left" })
                                <div class="input-container">
                                    @Html.EditorFor(customer => customer.Last, new { htmlAttributes = new { @class = "form-control", placeholder = "Last name" } })
                                    @Html.ValidationMessageFor(customer => customer.Last, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(customer => customer.Email, htmlAttributes: new { @class = "col-md-2", @style = "float: left" })
                                <div class="input-container">
                                    @Html.EditorFor(customer => customer.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                                    @Html.ValidationMessageFor(customer => customer.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(customer => customer.ConfirmEmail, htmlAttributes: new { @class = "col-md-2", @style = "float: left" })
                                <div class="input-container">
                                    @Html.EditorFor(customer => customer.ConfirmEmail, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm Email" } })
                                    @Html.ValidationMessageFor(customer => customer.ConfirmEmail, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(customer => customer.Password, htmlAttributes: new { @class = "col-md-2", @style = "float: left" })
                                <div class="input-container">
                                    @Html.EditorFor(customer => customer.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                                    @Html.ValidationMessageFor(customer => customer.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(customer => customer.ConfirmPassword, htmlAttributes: new { @class = "col-md-2", @style = "float: left" })
                                <div class="input-container">
                                    @Html.EditorFor(customer => customer.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm Password" } })
                                    @Html.ValidationMessageFor(customer => customer.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(customer => customer.Address.StreetAddress, htmlAttributes: new { @class = "col-md-2", @style = "float: left" })
                                <div class="input-container">
                                    @Html.EditorFor(customer => customer.Address.StreetAddress, new { htmlAttributes = new { @class = "form-control", placeholder = "Address" } })
                                    @Html.ValidationMessageFor(customer => customer.Address.StreetAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(customer => customer.Address.State, htmlAttributes: new { @class = "col-md-2", @style = "float: left" })
                                <div class="input-container">
                                    @Html.EditorFor(customer => customer.Address.State, new { htmlAttributes = new { @class = "form-control", placeholder = "State" } })
                                    @Html.ValidationMessageFor(customer => customer.Address.State, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(customer => customer.Address.Zip, htmlAttributes: new { @class = "col-md-2", @style = "float: left" })
                                <div class="input-container">
                                    @Html.EditorFor(customer => customer.Address.Zip, new { htmlAttributes = new { @class = "form-control", placeholder = "Zip" } })
                                    @Html.ValidationMessageFor(customer => customer.Address.Zip, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <div class="button-container col-md-10">
                                    <input type="submit" value="Submit" class="btn btn-lg btn-primary btn-block text-uppercase" />
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-2 offset-md-2">
                                    <label class="text-success">@ViewBag.SuccessMessage</label>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-2 offset-md-2">
                                    <label class="text-danger">@ViewBag.ErrorMessage</label>
                                </div>
                            </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>



